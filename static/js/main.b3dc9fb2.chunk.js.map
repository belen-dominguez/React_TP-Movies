{"version":3,"sources":["const/api.js","components/navigation/NavBar.jsx","utils/hooks/useWidth.js","components/navigation/Paginacion.jsx","utils/hooks/useGetImg.js","components/Cards/SearchForm.jsx","components/navigation/Search.jsx","components/navigation/Header.jsx","components/Cards/Card.jsx","components/Cards/CardContainer.jsx","components/layout/Home.jsx","components/layout/Movies.jsx","components/layout/Tv.jsx","components/navigation/NavCharacter.jsx","components/navigation/MovieNav.jsx","components/movie/VoteStars.jsx","components/movie/External.jsx","components/movie/Info.jsx","components/movie/Reparto.jsx","components/movie/Episodios.jsx","const/variables.js","components/Cards/CardMobile.jsx","components/Cards/CardFull.jsx","utils/hooks/useTitle.js","components/pages/DisplayAll.jsx","components/movie/Similares.jsx","components/movie/Videos.jsx","components/layout/HomeMovie.jsx","components/character/Creditos.jsx","components/character/InfoCharacter.jsx","components/pages/Person.jsx","App.js","serviceWorker.js","index.js"],"names":["URL_BASE","NavBar","className","to","useWidth","tipo","category","useState","isMobile","setIsMobile","window","innerWidth","width","setWidth","updateWidth","useEffect","addEventListener","removeEventListener","Paginacion","finalUrl","splitUrl","url","urlGenre","total","page","changePage","pageAdd","items","useParams","from","num","uid","i","push","split","style","marginBottom","onClick","disabled","map","item","active","key","slice","e","useGetImg","nro","require","isError","setIsError","isLoading","setIsLoading","urlImg","setUrlImg","Axios","get","process","then","resp","base_url","data","images","size","poster_sizes","catch","err","SearchForm","id","results","setResults","currentPage","setCurrentPage","totalPage","setTotalPage","total_pages","media_type","poster_path","undefined","src","alt","name","title","newpage","numero","prevState","Search","search","setSearch","algo","setAlgo","type","placeholder","value","onChange","target","onKeyDown","keyCode","Header","Card","show","urlMain","urlFinal","CardContainer","arrShows","Home","trendingMovies","setTrendingMovies","trendingTV","setTrendingTV","axios","console","log","tv","filter","movies","Movies","resultados","listado","setListado","forEach","categoria","Tv","NavCharacter","select","MovieNav","section","fontSize","marginTop","ICONS","star","VoteStars","icon","number","Math","round","isOdd","fullIcons","fullIconsArr","Array","halfIcons","emptyIconsArr","renderIcons","External","external","facebook_id","href","instagram_id","twitter_id","imdb_id","Info","myApiKey","setExternal","flexDirection","maxWidth","vote_average","overview","number_of_seasons","number_of_episodes","budget","revenue","genres","production_companies","Reparto","cast","profile_path","character","Episodios","totalSeason","setTotalSeason","season","setSeason","temporadasAll","temporadas","handleClick","episodes","still_path","episode_number","MEDIA","movie","CATEGORY","trending","popular","top_rated","upcoming","now_playing","on_the_air","CardMobile","CardFull","genre","useTitle","DisplayAll","selectedId","genreList","setGenreLis","genreResult","Similares","Videos","margin","height","HomeMovie","useRouteMatch","path","sectionL","backdrop_path","backgroundImage","backgroundColor","Creditos","InfoCharacter","biography","Person","where","App","exact","Boolean","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error","message"],"mappings":"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","file":"static/js/main.b3dc9fb2.chunk.js","sourcesContent":["export const URL_BASE = \"https://api.themoviedb.org/3/\"","import React from \"react\"\r\nimport {   BrowserRouter as Router,  Switch,  Route,  Link} from \"react-router-dom\";\r\nimport { AiOutlineHome, AiOutlineVideoCamera,  } from \"react-icons/ai\";\r\nimport { FiMonitor } from \"react-icons/fi\";\r\n\r\n\r\nconst NavBar = () => {\r\n    return (\r\n        <div className=\"navBar\">\r\n            <Link to=\"/\">\r\n                <AiOutlineHome />\r\n            </Link>\r\n            <Link to=\"/movie\">\r\n                <AiOutlineVideoCamera />\r\n            </Link>\r\n            <Link to=\"/tv\">\r\n                <FiMonitor />\r\n            </Link>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default NavBar","import { useState, useEffect } from \"react\";\r\n\r\n\r\n\r\n\r\nexport const useWidth = (tipo, category) => {\r\n    const [isMobile, setIsMobile] = useState(false)\r\n    const [width, setWidth] = useState(window.innerWidth);\r\n\r\n    const updateWidth = () => {\r\n        setWidth(window.innerWidth);\r\n        \r\n    };\r\n    useEffect(() => {\r\n        if(width <= 500){\r\n            setIsMobile(true)\r\n        }\r\n        else{\r\n            setIsMobile(false)\r\n        }\r\n\r\n    },[width])\r\n     \r\n     useEffect(() => {\r\n        \r\n        window.addEventListener(\"resize\", updateWidth);\r\n        return () => window.removeEventListener(\"resize\", updateWidth);\r\n    })\r\n\r\n     return [isMobile]\r\n    \r\n}","import React, { useState } from 'react'\r\nimport { Link, useParams } from 'react-router-dom'\r\nimport { MdNavigateNext, MdNavigateBefore } from \"react-icons/md\";\r\nimport { useWidth } from '../../utils/hooks/useWidth';\r\n\r\n\r\nconst Paginacion =({url, urlGenre, total, page, changePage, pageAdd}) => {\r\n    let finalUrl;\r\n    let splitGenre\r\n    let splitUrl\r\n    let items = []\r\n    let prueba = []\r\n    \r\n   const {from, category, num, uid} = useParams() \r\n\r\n   const [isMobile] = useWidth()\r\n   \r\n\r\n    /*crear array con el total de elementos a imprimir*/\r\n    for(let i = 2; i< total; i++){\r\n         items.push(i) \r\n    }\r\n    \r\n    \r\n/* para resolver la paginacion de Generos, donde la url es diferente al de las categorias*/\r\n    \r\n    if(urlGenre){\r\n        splitGenre = urlGenre.split(\"/\")\r\n        if(splitGenre[3] == \"undefined\"){ \r\n            finalUrl = url\r\n        }\r\n    }\r\n    if(url){\r\n        splitUrl = url.split(\"/\")\r\n        if(splitUrl[2] == \"undefined\"){\r\n            finalUrl =  urlGenre;\r\n        }\r\n        if(splitUrl[1] == \"search\"){\r\n            finalUrl =  url;\r\n        }\r\n\r\n    }\r\n\r\n    const pagMenorDiez = () => {\r\n        if(total < 10 && !isMobile && page < 5 ){\r\n           return (items.map(item => {\r\n                let active = page == item ? \"active\" : \"\";\r\n                return (\r\n                    <Link key={item}  className=\"pagina\" to={`${finalUrl}/${item}`}>\r\n                        <button  className={`${active}`} onClick={() =>{changePage(item)}}> {item}</button>\r\n                    </Link>\r\n                )\r\n            }).slice(0,4))\r\n        }\r\n        else if(total < 10 && !isMobile && page >= 5){\r\n            return (\r\n                items.map(item => {\r\n                    let active = page == item ? \"active\" : \"\";\r\n                    return (\r\n                        <Link key={item} className=\"pagina\" to={`${finalUrl}/${item}`}>\r\n                            <button className={`${active}`}   onClick={(e) =>{changePage(item)}}> {item}</button>\r\n                        </Link>\r\n                    )\r\n                }).slice((total - 6),(total-1))\r\n            )\r\n        }\r\n    }\r\n    \r\n\r\n   \r\n    return (\r\n        <div className=\"paginacion\" style={isMobile ? {marginBottom: \"8rem\" } :null }>\r\n             <Link className=\"pagina\" to={`${finalUrl}/${page-1}`}>\r\n                <button onClick={() =>pageAdd(-1)} disabled={page == 1}>   \r\n                       <MdNavigateBefore /> \r\n                </button>\r\n            </Link>\r\n\r\n            <Link className=\"pagina\" to={`${finalUrl}/1`}>\r\n                    <button  onClick={() =>changePage(1)}> 1</button>\r\n            </Link>\r\n        \r\n            {total > 10 && !isMobile && page <= 5 &&\r\n                items.map(item => {\r\n                    let active = page == item ? \"active\" : \"\";\r\n                    return (\r\n                        <Link key={item}  className=\"pagina\" to={`${finalUrl}/${item}`}>\r\n                            <button  className={`${active}`} onClick={() =>{changePage(item)}}> {item}</button>\r\n                        </Link>\r\n                    )\r\n                }).slice(0,4)\r\n            }\r\n\r\n\r\n            {/* opcion para cuando son menos de 10 paginas */}\r\n            {total < 10 && !isMobile && page >= 5 && <button>...</button>} \r\n            {total < 10 && pagMenorDiez()}   \r\n            \r\n          \r\n            {total > 10 && !isMobile && page > 5 && <button>...</button>} {/*puntitos a la derecha + 5 primeros nros*/}\r\n        \r\n             {/* opcion para cuando es mobile  */}\r\n            {isMobile && page > 1 && \r\n            \r\n            \r\n            items.map(item => {\r\n                let active = page == item ? \"active\" : \"\";\r\n                return (\r\n                    <Link key={item} className=\"pagina\" to={`${finalUrl}/${item}`}>\r\n                        <button className={`${active}`}   onClick={(e) =>{changePage(item)}}> {item}</button>\r\n                    </Link>\r\n                )\r\n            }).slice((page-2),(page-1))\r\n            }\r\n\r\n\r\n            {total > 10 && !isMobile &&\r\n            \r\n                page > 5 && page < (total - 4) &&\r\n                items.map(item => {\r\n                    let active = page == item ? \"active\" : \"\";\r\n                    return (\r\n                        <Link key={item} className=\"pagina\" to={`${finalUrl}/${item}`}>\r\n                            <button className={`${active}`}   onClick={(e) =>{changePage(item)}}> {item}</button>\r\n                        </Link>\r\n                    )\r\n                }).slice((page-3),((page-3) +3))\r\n            }\r\n\r\n           \r\n            \r\n            \r\n            {total > 10 && !isMobile && page >= (total -4) && \r\n                            \r\n                items.map(item => {\r\n                    let active = page == item ? \"active\" : \"\";\r\n                    return (\r\n                        <Link key={item} className=\"pagina\" to={`${finalUrl}/${item}`}>\r\n                            <button className={`${active}`}   onClick={(e) =>{changePage(item)}}> {item}</button>\r\n                        </Link>\r\n                    )\r\n                }).slice((total - 6),(total-1))\r\n\r\n                \r\n                \r\n            }\r\n\r\n             { !isMobile && page < (total -4) && <button>...</button>} \r\n\r\n            <Link className=\"pagina\" to={`${finalUrl}/${total}`}>\r\n                     <button  onClick={() =>changePage(total)}> {total}</button> \r\n                     \r\n            </Link>\r\n            \r\n            <Link className=\"pagina\" to={`${finalUrl}/${page+1}`}> \r\n                <button onClick={() =>pageAdd(1)} disabled={page == total}> \r\n                    <MdNavigateNext />\r\n                </button>\r\n            </Link>\r\n         \r\n           \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Paginacion\r\n","import Axios from \"axios\"\r\nimport { useState, useEffect } from \"react\"\r\n\r\n\r\nexport const  useGetImg = nro => {\r\n    const {URL_BASE} = require(\"../../const/api\")\r\n    const [isError, setIsError] = useState(false)\r\n    const [isLoading, setIsLoading] = useState(false)\r\n    const [urlImg, setUrlImg] = useState({})\r\n\r\n\r\n    useEffect(() => {\r\n        setIsLoading(true)\r\n\r\n        Axios\r\n        .get(`https://api.themoviedb.org/3/configuration?api_key=${process.env.REACT_APP_API_KEY}`)\r\n        .then(resp =>{\r\n            setUrlImg({\r\n                base_url: resp.data.images.base_url,\r\n                size:  resp.data.images.poster_sizes[`${nro}`]\r\n            })\r\n            setIsLoading(false)\r\n        })\r\n        .catch(err => {\r\n            setIsError(true)\r\n            setIsLoading(false)\r\n        })\r\n        \r\n    }, [nro])\r\n\r\n    return[urlImg, isLoading, isError]\r\n}\r\n","import React, { useEffect, useState } from 'react'\r\nimport { useParams, Link, useRouteMatch } from 'react-router-dom'\r\nimport Axios from 'axios'\r\nimport Paginacion from \"../navigation/Paginacion\"\r\nimport { useWidth } from '../../utils/hooks/useWidth'\r\nimport { useGetImg } from '../../utils/hooks/useGetImg'\r\nimport { BsCardImage } from \"react-icons/bs\";\r\n\r\nconst SearchForm = ({}) => {\r\n  let {id } = useParams()\r\n  const myApiKey = \"ea62e617867b87697a8db24515b62c23\"\r\n    const [results, setResults] = useState([])\r\n    const [isMobile] = useWidth()\r\n    const [urlImg, isLoading, isError] = useGetImg(3) \r\n\r\n    /*paginacion */\r\n    const [currentPage, setCurrentPage] = useState(1)\r\n     const [totalPage, setTotalPage] = useState(\"\")\r\n    const url = `/search/${id}`; \r\n\r\n\r\n\r\nuseEffect(() => {\r\n    \r\n    Axios\r\n    .get(`https://api.themoviedb.org/3/search/multi?api_key=${myApiKey}&query=${id}&page=${currentPage}`)\r\n    .then(resp => {\r\n        setResults(resp.data)\r\n        setTotalPage(resp.data.total_pages)/* paginacion*/\r\n    })\r\n}, [id, currentPage])\r\n\r\n/*cuando cambie el ID me vuelva a setear la pagina en 1. esto es porq este componente no renderiza nuevamente cunado se cambia la busqueda*/\r\nuseEffect(() => {\r\n    setCurrentPage(1)\r\n},[id])\r\n\r\n\r\n\r\n/* para paginacion*/\r\nconst changePage = (newpage) => {\r\n    setCurrentPage(newpage) \r\n}\r\n\r\nconst pageAdd = (numero) => {\r\n    setCurrentPage(prevState => prevState + numero) \r\n    //num = currentPage\r\n}\r\n\r\n\r\n    return (\r\n        <div className=\"search-results\">\r\n            \r\n            <h2>Resultados para {id}</h2>\r\n            <div className=\"cards-container\">\r\n            {\r\n              results.results &&  results.results.map((item, i) => {\r\n                \r\n               return   (\r\n               <div key={i} className=\"card-container\" style={isMobile ? {width:\"50%\"} : null}>\r\n                  \r\n                       \r\n                          <Link to={item.media_type == \"person\" ? `/${item.media_type}/${item.id}` : `/${item.media_type}/${item.id}/info`}>\r\n                     \r\n                        \r\n                        {isLoading || item.poster_path === null || item.poster_path === undefined\r\n                            ? <div className=\"img-null-credits\"><BsCardImage /> </div> \r\n                            : <img  src={`${urlImg.base_url}${urlImg.size}${item.poster_path}`} alt=\"\"/>\r\n                        }\r\n                        \r\n                        {item.media_type == \"tv\" ? <h3>{item.name}</h3> : <h3>{item.title}</h3>}\r\n                        </Link>\r\n                </div>\r\n                        )\r\n              })\r\n            }\r\n            </div>\r\n\r\n            {results &&  <Paginacion url={url} total={totalPage} page={currentPage} changePage={changePage} pageAdd={pageAdd}/>}\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SearchForm\r\n","import React from \"react\"\r\nimport { FiSearch } from \"react-icons/fi\";\r\nimport { useState } from \"react\";\r\nimport { useEffect } from \"react\";\r\nimport Axios from \"axios\";\r\nimport SearchForm from \"../Cards/SearchForm\";\r\nimport { Redirect, Route } from \"react-router-dom\";\r\n\r\nconst Search = () => {\r\n    const [search, setSearch] = useState()\r\n    const [results, setResults] = useState([])\r\n    const [algo, setAlgo] = useState(false)\r\n   \r\n    const handleChange = (e) => {\r\n        setSearch(e.target.value)\r\n        setAlgo(false)\r\n    }\r\n    const handleKeyPress = (e) => {\r\n\r\n        if (e.keyCode == 13 ){\r\n           \r\n            setAlgo(true)\r\n           \r\n           \r\n        }\r\n       \r\n    }\r\n    \r\n   \r\n    \r\n    return (\r\n        <div className=\"search\">\r\n            <FiSearch />\r\n            <input type=\"search\" placeholder=\"Búsqueda...\" value={search} onChange={handleChange} onKeyDown={handleKeyPress}/>\r\n\r\n             {algo &&     <Redirect to={`/search/${search}`} />  } \r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Search","import React from \"react\"\r\nimport NavBar from \"./NavBar\"\r\nimport Search from \"./Search\"\r\n\r\n\r\n\r\nconst Header = () => {\r\n    return (\r\n        <header>\r\n            <NavBar />\r\n            <Search />\r\n        </header>\r\n        \r\n    )\r\n}\r\n\r\nexport default Header","import React, { useEffect, useState } from \"react\"\r\nimport { Link} from \"react-router-dom\";\r\nimport { BsCardImage } from \"react-icons/bs\";\r\n\r\n\r\nconst Card = ({show, urlMain, urlFinal,tipo}) => {\r\n\r\n    \r\n\r\n    return (\r\n        <div className=\"card-container\" >\r\n            <Link to={`/${tipo}/${show.id}/info`}>\r\n                 {\r\n                 urlFinal === null || urlFinal === undefined\r\n                 ? <div className=\"img-null\"><BsCardImage /> </div> \r\n                 : <img src={`${urlMain.base_url}${urlMain.size}${urlFinal}`} alt=\"\"/> \r\n                 }\r\n            \r\n                {tipo == \"tv\" ? <h3>{show.name}</h3> : <h3>{show.title}</h3>}\r\n            </Link>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Card ","import React, { useEffect, useState } from \"react\"\r\nimport Card from \"./Card\"\r\nimport Axios from \"axios\"\r\nimport { useWidth } from \"../../utils/hooks/useWidth\"\r\nimport { useGetImg } from \"../../utils/hooks/useGetImg\"\r\n\r\n\r\nconst CardContainer = ({arrShows, tipo}) => {\r\n   \r\n  const isMobile = useWidth()\r\n  \r\n  const [urlImg, isLoading, isError] = useGetImg(3) \r\n  \r\n\r\n    \r\n    return (\r\n        <div className=\"cards-container\">\r\n\r\n          { isMobile[0] == true \r\n          \r\n          ? arrShows.map( (item, i) => {\r\n               \r\n               return (\r\n                 <Card key={i} show={item} tipo={tipo} urlMain={urlImg} urlFinal={item.poster_path}/>\r\n               )\r\n            }).slice(0,1) \r\n            \r\n          : arrShows.map( (item, i) => {\r\n               \r\n              return (\r\n                <Card key={i} show={item} tipo={tipo} urlMain={urlImg} urlFinal={item.poster_path}/>\r\n              )\r\n           }).slice(0,5)\r\n          \r\n          \r\n          }\r\n{/* \r\n         {arrShows && arrShows.map( (item, i) => {\r\n               \r\n               return (\r\n                 <Card key={i} show={item} tipo={tipo} urlMain={urlImg} urlFinal={item.poster_path}/>\r\n               )\r\n            }).slice(0,5)}  */}\r\n        \r\n          \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CardContainer\r\n\r\n","import React, {useState, useEffect} from \"react\"\r\nimport axios from \"axios\";\r\nimport {  Link} from \"react-router-dom\";\r\nimport CardContainer from \"../Cards/CardContainer\"\r\nimport { FiFilter } from \"react-icons/fi\";\r\n\r\n\r\nconst Home = () => {\r\n    const myApiKey = \"ea62e617867b87697a8db24515b62c23\"\r\n    const [results, setResults ]= useState([])\r\n    const [trendingMovies, setTrendingMovies] = useState([])\r\n    const [trendingTV, setTrendingTV] = useState([])\r\n    \r\n\r\n    \r\n    \r\n    useEffect(() => {\r\n        axios\r\n        .get(`https://api.themoviedb.org/3/trending/all/week?api_key=${myApiKey}`)\r\n        .then((resp) => {\r\n            console.log(resp)\r\n            setResults(resp.data.results)\r\n        })\r\n    }, [ ])\r\n\r\n\r\n   useEffect(() => {\r\n        let tv =  results.filter(item => {\r\n            return item.media_type == \"tv\"\r\n        })\r\n       let movies = results.filter(item => {\r\n            return item.media_type == \"movie\"\r\n        })\r\n\r\n        setTrendingMovies(movies)\r\n        setTrendingTV(tv)\r\n\r\n    },[results])\r\n    \r\n    \r\n    return (\r\n        <div>\r\n           \r\n           <Link to=\"/movie/trending\">\r\n               <h4>Peliculas que son Tendencia</h4>\r\n           </Link>\r\n           <CardContainer tipo=\"movie\" arrShows={trendingMovies} />\r\n\r\n            <Link to=\"/tv/trending\">\r\n              <h4>  Series que son Tendencia</h4>\r\n            </Link>\r\n            <CardContainer tipo=\"tv\" arrShows={trendingTV} />\r\n\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Home","import React, { useState, useEffect } from \"react\"\r\nimport Axios from \"axios\"\r\nimport {  Link} from \"react-router-dom\";\r\nimport CardContainer from \"../Cards/CardContainer\"\r\n\r\n\r\nconst Movies = () => {\r\n    const myApiKey = \"ea62e617867b87697a8db24515b62c23\"\r\n\r\n    const categorias = [\r\n        {name: \"popular\", title: \"Peliculas populares\",media_type: \"movie\", resultados: []}, \r\n        {name: \"top_rated\", title: \"Peliculas con mejores criticas\",media_type: \"movie\", resultados: []}, \r\n        {name:\"upcoming\",title: \"Peliculas a estrenarse\",media_type: \"movie\", resultados: [] }, \r\n        {name:\"now_playing\",title: \"Peliculas en cines\",media_type: \"movie\", resultados: []}\r\n    ]\r\n    const [listado, setListado] = useState(categorias)\r\n    \r\n\r\n\r\n    useEffect(() => {\r\n\r\n        listado.forEach((categoria) => {\r\n            \r\n            Axios\r\n            .get(`https://api.themoviedb.org/3/movie/${categoria.name}?api_key=${myApiKey}`)\r\n            .then(resp => {\r\n                \r\n                categoria.resultados = resp.data.results\r\n\r\n                setListado([\r\n                    ...listado,\r\n                    {...categoria}\r\n                ])\r\n\r\n                \r\n            })\r\n        })\r\n        \r\n    },[])\r\n\r\n    \r\n\r\n    return (\r\n        <div className=\"show-results\">\r\n            {listado && listado.map((item, i) => {\r\n               return ( <div key={i}>\r\n                            <Link to={`/movie/${item.name}`}>\r\n                             <h4> {item.title}</h4>\r\n                            </Link> \r\n                            <CardContainer  tipo={item.media_type} arrShows={item.resultados} />\r\n                        </div>\r\n                        )\r\n            })}\r\n\r\n            \r\n        \r\n        </div> \r\n    )\r\n}\r\n\r\nexport default Movies","import React, { useEffect, useState } from \"react\"\r\nimport Axios from \"axios\"\r\nimport CardContainer from \"../Cards/CardContainer\"\r\nimport {  Link} from \"react-router-dom\";\r\n\r\nconst Tv = () => {\r\n    const myApiKey = \"ea62e617867b87697a8db24515b62c23\"\r\n\r\n    const categorias = [\r\n        {name: \"popular\", title: \"Series populares\", media_type: \"tv\",  resultados: []}, \r\n        {name: \"top_rated\", title: \"Series con mejores criticas\", media_type: \"tv\", resultados: []}, \r\n        {name:\"on_the_air\",title: \"Series al aire\", media_type: \"tv\", resultados: [] } \r\n    ]\r\n    const [listado, setListado] = useState(categorias)\r\n    \r\n\r\n\r\n    useEffect(() => {\r\n\r\n        listado.forEach((categoria) => {\r\n            \r\n            Axios\r\n            .get(`https://api.themoviedb.org/3/tv/${categoria.name}?api_key=${myApiKey}`)\r\n            .then(resp => {\r\n                \r\n                categoria.resultados = resp.data.results\r\n\r\n                setListado([\r\n                    ...listado,\r\n                    {...categoria} \r\n                ])\r\n\r\n                \r\n            })\r\n        })\r\n        \r\n    },[])\r\n\r\n    \r\n\r\n    return (\r\n        <div>\r\n            {listado && listado.map((item, i) => {\r\n               \r\n               return ( <div key={i}>\r\n                            <Link to={`/tv/${item.name}`}>\r\n                              <h4> {item.title}</h4>\r\n                            </Link> \r\n                            <CardContainer tipo={item.media_type} arrShows={item.resultados} />\r\n                        </div>\r\n                        )\r\n            })}\r\n\r\n         </div>\r\n    )\r\n}\r\n\r\nexport default Tv ","import React from 'react'\r\nimport { Link, useParams } from 'react-router-dom'\r\nimport { useWidth } from '../../utils/hooks/useWidth'\r\n\r\nconst NavCharacter = ({}) => {\r\n    const [isMobile] = useWidth()\r\n    let {select} = useParams() ;\r\n    const url = `/person/${select}`\r\n\r\n    return (\r\n        <div className=\"navCharacter\" style={isMobile ? {width: \"60%\"} : null}>\r\n            <Link to={`${url}`}>\r\n                INFORMACION\r\n            </Link>\r\n            <Link to={`${url}/credits`}>\r\n                CREDITOS\r\n            </Link>\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default NavCharacter\r\n","import React from 'react'\r\nimport {   Link, useParams} from \"react-router-dom\";\r\nimport { useWidth } from '../../utils/hooks/useWidth';\r\n\r\nconst MovieNav =({url, tipo, id}) => {\r\n   \r\n\r\n    const [isMobile] = useWidth()\r\n    \r\n    const {from, uid, section} = useParams()\r\n    \r\n    \r\n\r\n    return (\r\n        <div className=\"navDetail\" style={isMobile ? {width: \"80%\", fontSize:\"1.5rem\", marginTop:\"3rem\" }: null}>\r\n            <Link to={`/${from}/${uid}/info`}>\r\n                INFO\r\n            </Link>\r\n            <Link to={`/${from}/${uid}/reparto`}>\r\n                REPARTO\r\n            </Link>\r\n            {from == \"movie\" && (\r\n\r\n                <Link to={`/${from}/${uid}/videos`}>\r\n                    VIDEOS \r\n                </Link>\r\n            )}\r\n            {from == \"tv\" && (\r\n\r\n                <Link to={`/${from}/${uid}/episodios`}>\r\n                    EPISODIOS\r\n                </Link>\r\n            \r\n            )}\r\n            <Link to={`/${from}/${uid}/similares`}>\r\n                SIMILARES \r\n            </Link>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default MovieNav\r\n","import React from 'react'\r\nimport { BsStarFill } from 'react-icons/bs';\r\nimport { BsStarHalf } from 'react-icons/bs';\r\nimport { BsStar } from 'react-icons/bs';\r\n\r\nconst ICONS = {\r\n    star: [<BsStarFill />, <BsStarHalf />, <BsStar />]\r\n}\r\n\r\nconst renderIcons = (icon,  numero) => {\r\n    console.log(numero)\r\n    let icons\r\n    let number = Math.round(numero)\r\n    const totalIcons = 5\r\n\r\n    const isOdd = number % 2;\r\n    const fullIcons = (number - isOdd) / 2\r\n    const fullIconsArr = [...new Array(fullIcons)].map(() => ICONS[icon][0])\r\n    const halfIcons = isOdd ? ICONS[icon][1] : null;\r\n    const emptyIconsArr = [...new Array(totalIcons - fullIcons - isOdd)].map(() => ICONS[icon][2])\r\n    icons = [...fullIconsArr, halfIcons, ...emptyIconsArr]\r\n\r\n    return icons\r\n}\r\n\r\nconst VoteStars = ({ numero, icon }) => {\r\n    return (\r\n        <div className=\"score\">\r\n        {renderIcons(icon, numero)}\r\n    </div>\r\n    )\r\n}\r\n\r\nexport default VoteStars\r\n","import React from 'react'\r\nimport { AiOutlineInstagram, AiOutlineTwitter } from \"react-icons/ai\";\r\nimport { FaFacebookSquare, FaImdb } from \"react-icons/fa\";\r\n\r\nconst External = ({external}) => {\r\n    return (\r\n        <div className=\"external\">\r\n            {external.facebook_id && <a href={`https://facebook.com/${external.facebook_id}`} target='_blank' >  <FaFacebookSquare /></a>}\r\n              {external.instagram_id && <a target='_blank'  href={`https://www.instagram.com/${external.instagram_id}`}> <AiOutlineInstagram /></a>}\r\n              {external.twitter_id && <a target='_blank' href={`https://twitter.com/${external.twitter_id}`}>  <AiOutlineTwitter /></a>}\r\n              {external.imdb_id && <a target='_blank' href={`https://www.imdb.com/title/${external.imdb_id}`}>  <FaImdb /></a>}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default External\r\n","import React, { useEffect, useState } from 'react'\r\nimport Axios from 'axios'\r\nimport VoteStars from './VoteStars'\r\nimport External from \"./External\"\r\nimport { Link, useParams } from 'react-router-dom'\r\nimport { useWidth } from '../../utils/hooks/useWidth'\r\n\r\n\r\n\r\nconst Info =({tipo, urlImg, id}) => { /*tipo, urlImg, id*/\r\n    const {from, uid} = useParams()\r\n    const [isMobile] = useWidth()\r\n    \r\n\r\n    //console.log(tipo, id)\r\n    const myApiKey = \"ea62e617867b87697a8db24515b62c23\"\r\n    const [results, setResults] = useState([])\r\n    const [external, setExternal] = useState([])\r\n\r\n    useEffect(() => {\r\n        Axios\r\n        .get(`https://api.themoviedb.org/3/${from}/${uid}?api_key=${myApiKey}`)\r\n        .then(resp => {\r\n            console.log(resp.data)\r\n            setResults(resp.data)\r\n        })\r\n       \r\n        /*links externos*/\r\n        Axios\r\n        .get(`https://api.themoviedb.org/3/${from}/${uid}/external_ids?api_key=${myApiKey}`)\r\n        .then(resp => {\r\n           \r\n            setExternal(resp.data)\r\n        })\r\n\r\n       \r\n    },[])\r\n\r\n    return (\r\n        <div>\r\n        <div className=\"info-container\" \r\n        style={isMobile ?{flexDirection:\"column\", width: \"90%\", marginTop: \"4rem\"} : null}>\r\n            \r\n            {results && (\r\n                <>\r\n            <img className=\"info-img\" \r\n            src={`${urlImg.base_url}${urlImg.size}${results.poster_path}`} alt=\"\"\r\n            style={isMobile ?{ maxWidth: \"100%\", marginBottom: \"2rem\"} : null}/>\r\n            <div className=\"item-info\"\r\n            style={isMobile ?{ width: \"100%\", fontSize: \"1.5rem\"} : null}>\r\n                \r\n                {from == \"tv\" ? <h4>{results.name}</h4> :<h4> {results.title} </h4> }\r\n               \r\n               {results.vote_average && <VoteStars  numero={results.vote_average} icon=\"star\"  />}\r\n                <p>{results.overview}</p>\r\n\r\n                {from == \"tv\" ?\r\n                    <>\r\n                    <p>Temporadas: {results.number_of_seasons}</p>\r\n                    <p>Episodios: {results.number_of_episodes}</p>\r\n                    </>\r\n                    :\r\n                    <>\r\n                    <p>Presupuesto: {results.budget}</p>\r\n                    <p>Recaudación: {results.revenue}</p>\r\n                    </>\r\n                }\r\n                <p>Generos: {results.genres && results.genres.map(item =>{\r\n                    // return  <span>{item.name} </span>\r\n                    return (\r\n                        <Link to={`/genre/${from}/${item.name}`}>\r\n                            <span>{item.name} </span>\r\n                        </Link>\r\n                    )\r\n                })}</p>\r\n                <p>Produccion: {results.production_companies && results.production_companies.map(item => {\r\n                   return  <span>{item.name} </span>\r\n                })}</p>\r\n                <div>\r\n                    {external && <External external={external} />}\r\n                </div>\r\n            </div>\r\n            \r\n            </>)}\r\n        </div>\r\n        {/* {external && <External external={external} />} */}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Info\r\n","import React, { useEffect, useState } from 'react'\r\nimport Axios from 'axios'\r\nimport { Link, useParams } from 'react-router-dom'\r\nimport { useWidth } from '../../utils/hooks/useWidth'\r\nimport { useGetImg } from '../../utils/hooks/useGetImg'\r\nimport { BsCardImage } from \"react-icons/bs\";\r\n\r\nconst Reparto = ({}) => { /*tipo, urlImg, id*/\r\n    const myApiKey = \"ea62e617867b87697a8db24515b62c23\"\r\n    const {from, uid} = useParams()\r\n    \r\n    const [results, setResults] = useState([])\r\n    const [isMobile] = useWidth()\r\n    const [urlImg, isLoading, isError] = useGetImg(4) \r\n\r\n    \r\n\r\n    useEffect(() => {\r\n        \r\n        Axios\r\n        .get(`https://api.themoviedb.org/3/${from}/${uid}/credits?api_key=${myApiKey}`)\r\n        .then(resp => {\r\n            setResults(resp.data)\r\n        })\r\n        \r\n    \r\n       \r\n    },[])\r\n\r\n\r\n    return (\r\n        <div className=\"cards-container\">\r\n           {results.cast && results.cast.map((item,i) =>{\r\n              \r\n               return (\r\n                   <div className=\"card-container\"  style={isMobile ? {maxWidth: \"50%\"} : null} key={i}>\r\n                       <Link to={`/person/${item.id}`}>\r\n                         {isLoading || item.profile_path == null\r\n                             ? <div className=\"img-null\"><BsCardImage /> </div> \r\n                            :< img src={`${urlImg.base_url}${urlImg.size}${item.profile_path}`} alt=\"\"/>\r\n                            }\r\n                       \r\n                        <h3>{item.character}</h3>\r\n                        </Link>\r\n                   </div>\r\n               )\r\n           })}\r\n        </div> \r\n    )\r\n}\r\n\r\nexport default Reparto\r\n","import React, { useEffect } from 'react'\r\nimport { useState } from 'react'\r\nimport Axios from 'axios'\r\nimport { useParams } from 'react-router-dom'\r\nimport { useWidth } from '../../utils/hooks/useWidth'\r\n\r\nconst Episodios = ({urlImg}) => {\r\n    const {from, uid} = useParams()\r\n    const myApiKey = \"ea62e617867b87697a8db24515b62c23\" \r\n    const [results, setResults] = useState([])\r\n    const [totalSeason, setTotalSeason] = useState({})\r\n    const [season, setSeason] = useState(1)\r\n    const [temporadasAll, setTemporadasAll] = useState([])\r\n    const [isMobile] = useWidth()\r\n\r\n    useEffect(() => {\r\n        /*can de temporadas*/\r\n        Axios\r\n        .get(`https://api.themoviedb.org/3/${from}/${uid}?api_key=${myApiKey}`)\r\n        .then(resp => {\r\n            \r\n            setTotalSeason(resp.data.number_of_seasons)\r\n        })\r\n        /*info po temporada*/\r\n        Axios\r\n        .get(`https://api.themoviedb.org/3/${from}/${uid}/season/${season}?api_key=${myApiKey}`)\r\n        .then(resp => {\r\n            \r\n            setResults(resp.data)\r\n        })\r\n\r\n    },[season])\r\n\r\n   \r\n   \r\n    \r\n   useEffect(() => {\r\n    for(let i = 0; i < totalSeason; i++){\r\n        \r\n        let temporadas = `Temporada ${i+1}`\r\n        temporadasAll.push(temporadas)\r\n    }\r\n   },[totalSeason])\r\n\r\n   const handleClick = (e) => {\r\n    setSeason(e.target.value)\r\n   }\r\n\r\n//console.log(results)\r\n\r\n    return (\r\n        <div >\r\n            <div className=\"seasons\">\r\n                <select className=\"season-select\" name=\"season\" id=\"\">\r\n                    {temporadasAll.map((item, i) => {\r\n                      return  <option onClick={handleClick} key={i} value={i+1}>{item}</option>\r\n                    })}\r\n                </select>\r\n            </div>\r\n            <div className=\"episodes\">\r\n                 {results.episodes && results.episodes.map((item,i) => {\r\n                     return (<div className=\"episodes-results\" style={isMobile ? {width: \"100%\"} : null} key={i}>\r\n                                <img src={`${urlImg.base_url}${urlImg.size}${item.still_path}`} alt=\"\"/>\r\n                                <div className=\"episodes-details\">\r\n                                    <p> <span>EP{item.episode_number}</span> {item.name}</p>\r\n                                    <p className=\"episode-overview\">{item.overview}</p>\r\n                                </div>\r\n                            </div>)\r\n                 })} \r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Episodios\r\n","const MEDIA = {\r\n    movie: \"Peliculas\",\r\n    tv: \"Series\"\r\n}\r\n\r\nconst CATEGORY = {\r\n    trending: \"que son tendencia\",\r\n    popular: \"populares\",\r\n    top_rated: \"con  mejores criticas\",\r\n    upcoming: \"a estrenarse\",\r\n    now_playing: \"en cines\",\r\n    on_the_air: \"al aire\"\r\n}\r\n\r\nexport {MEDIA, CATEGORY} ","import React, { useEffect, useState } from \"react\"\r\nimport { Link, useParams} from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport { BsCardImage } from \"react-icons/bs\";\r\n\r\n\r\nconst CardMobile = ({show, urlMain, urlFinal,tipo}) => {\r\n\r\n    \r\n\r\n    return (\r\n        <div className=\"card-container\" style={{maxWidth:  \"50%\"}}>\r\n            <Link to={`/${tipo}/${show.id}/info`}>\r\n                 {urlFinal === null ? <div className=\"img-null\"><BsCardImage /> </div> : <img src={`${urlMain.base_url}${urlMain.size}${urlFinal}`} alt=\"\"/>  }\r\n            \r\n            {tipo == \"tv\" ? <h3>{show.name}</h3> : <h3>{show.title}</h3>}\r\n            </Link>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CardMobile ","import React, { useEffect, useState } from \"react\"\r\nimport Card from \"./Card\"\r\nimport Axios from \"axios\"\r\nimport { useTitle } from \"../../utils/hooks/useTitle\";\r\n\r\nimport CardMobile from \"./CardMobile\";\r\nimport { useWidth } from \"../../utils/hooks/useWidth\";\r\nimport { useGetImg } from \"../../utils/hooks/useGetImg\";\r\n\r\nconst CardFull = ({category, tipo, arrShows, genre}) => {\r\n \r\n    /* esto es un cuastom hook*/\r\n    const title = useTitle(tipo, category)\r\n    const [isMobile] = useWidth()\r\n    const [urlImg, isLoading, isError] = useGetImg(3)\r\n\r\n    \r\n    \r\n    return ( \r\n        <div>\r\n            \r\n            {genre ? <h4>Género: {genre}</h4> : <h4>{title}</h4>}\r\n            <div className=\"cards-container\" >\r\n    \r\n                {arrShows && arrShows.map( (item, i) => {\r\n                    \r\n                    return ( \r\n                        <>\r\n                        {\r\n                            isMobile \r\n                            ? <CardMobile key={i} show={item} tipo={tipo} urlMain={urlImg} urlFinal={item.poster_path}/> \r\n                            : <Card key={i} show={item} tipo={tipo} urlMain={urlImg} urlFinal={item.poster_path}/>\r\n                        }\r\n                        </>\r\n                        )\r\n                    })}\r\n                \r\n               \r\n                \r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CardFull","import { MEDIA, CATEGORY } from \"../../const/variables\"\r\n\r\nexport const useTitle = (tipo, category) => {\r\n    if(category === \"trending\"){\r\n        return `${MEDIA[tipo]} que son tendencias`\r\n    }\r\n    if(!category){\r\n        return `${MEDIA[tipo]} similares`\r\n    }\r\n    const parsedTitle = `${MEDIA[tipo]} ${CATEGORY[category]}`\r\n    return parsedTitle\r\n}","import React, { useState, useEffect}  from \"react\"\r\nimport CardFull from \"../Cards/CardFull\"\r\nimport HomeMovie from \"../layout/HomeMovie\"\r\nimport Paginacion from \"../navigation/Paginacion\"\r\nimport {    useParams, useRouteMatch  } from \"react-router-dom\";\r\nimport Axios from \"axios\";\r\n\r\n\r\n\r\n\r\nconst DisplayAll = ({}) => {\r\n\r\n    let {from,category,genre} = useParams() ;\r\n   \r\n   \r\n    const url = `/${from}/${category}`\r\n    const urlGenre = `/genre/${from}/${genre}`\r\n\r\n\r\n    const myApiKey = \"ea62e617867b87697a8db24515b62c23\"\r\n     const [results, setResults] = useState([])\r\n     const [genreList, setGenreLis] = useState([])\r\n     let selectedId;\r\n\r\n     const [currentPage, setCurrentPage] = useState(1)\r\n     const [totalPage, setTotalPage] = useState(\"\")\r\n    \r\n \r\n /*custom hooks*/\r\n// const [data, isLoading, isError] = useGet(`https://api.themoviedb.org/3/trending/${from}/week?api_key=${process.env.REACT_APP_API_KEY}&page=${currentPage}`)\r\n\r\n/* aca en display all entran todas la categorias de movie y series. lo que es search primero va a searchForm y tanto displayall como search form al pie dirigen a \"paginacion\" el componente*/\r\n   \r\n    useEffect(() => {\r\n\r\n        if(category  == \"trending\"){ \r\n            console.log(from)\r\n            Axios\r\n            .get(`https://api.themoviedb.org/3/trending/${from}/week?api_key=${myApiKey}&page=${currentPage}`)\r\n            .then((resp) => {\r\n                //console.log(resp)\r\n                setResults(resp.data.results)\r\n                setTotalPage(resp.data.total_pages)\r\n            })\r\n        }\r\n        else if(genre){\r\n            console.log(genre)\r\n            Axios\r\n            .get(`https://api.themoviedb.org/3/genre/${from}/list?api_key=${myApiKey}`)\r\n            .then((resp) => {\r\n                setGenreLis(resp.data.genres)\r\n            })\r\n\r\n        }\r\n        else{\r\n            \r\n            Axios\r\n            .get(`https://api.themoviedb.org/3/${from}/${category}?api_key=${myApiKey}&page=${currentPage}`)\r\n            .then((resp) => {\r\n                //console.log(resp.data)\r\n                setResults(resp.data.results)\r\n                setTotalPage(resp.data.total_pages)\r\n            })\r\n           \r\n        }\r\n    }, [currentPage ])\r\n\r\n    useEffect(() => {\r\n\r\n       let genreResult = genreList.filter(item => {\r\n           \r\n            return item.name == genre\r\n            \r\n        })\r\n\r\n       \r\n       selectedId = genreResult[0]\r\n    //    console.log(selectedId)\r\n    //    selectedId && console.log(selectedId.id)\r\n\r\n       if(selectedId){\r\n           \r\n           Axios\r\n           .get(`https://api.themoviedb.org/3/discover/${from}?api_key=${myApiKey}&with_genres=${selectedId.id}&page=${currentPage}`)\r\n           .then((resp) => {\r\n               //console.log(resp.data)\r\n               setResults(resp.data.results)\r\n               setTotalPage(resp.data.total_pages)\r\n           })\r\n       }\r\n      \r\n\r\n\r\n     },[genreList])\r\n\r\n /* esta parte es para redirigir a la pagina de ID, que tiene info de cada peli/serie en particular*/\r\n    // if(!isNaN(category)) { \r\n\r\n       \r\n    //     return (\r\n    //         <HomeMovie tipo={from} id={category}/>\r\n    //     )\r\n    // } \r\n\r\n\r\n/* para paginacion*/\r\n    const changePage = ( newpage) => {\r\n    \r\n        setCurrentPage(newpage) \r\n    }\r\n    \r\n    const pageAdd = ( numero) => {\r\n        setCurrentPage(prevState => prevState + numero) \r\n       \r\n    }\r\n\r\n    return (\r\n        <div >\r\n            <div>\r\n                {results && <CardFull category={category} tipo={from} arrShows={results} genre={genre}/> }\r\n\r\n            </div>\r\n            \r\n\r\n              {results &&  <Paginacion url={url} urlGenre={urlGenre} total={totalPage} page={currentPage} changePage={changePage} pageAdd={pageAdd}/>}\r\n            \r\n        \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default DisplayAll","import React, { useEffect, useState } from 'react'\r\nimport Axios from 'axios'\r\nimport DisplayAll from '../pages/DisplayAll'\r\nimport CardFull from '../Cards/CardFull'\r\nimport { useParams } from 'react-router-dom'\r\n\r\nconst Similares =({urlImg})=> {/*tipo, urlImg, id*/\r\n    const myApiKey = \"ea62e617867b87697a8db24515b62c23\"\r\n    const [results, setResults] = useState([])\r\n    const {from, uid} = useParams()\r\n\r\n    useEffect(() => {\r\n        Axios\r\n        .get(`https://api.themoviedb.org/3/${from}/${uid}/recommendations?api_key=${myApiKey}`)\r\n        .then(resp => {\r\n            setResults(resp.data) \r\n        })\r\n\r\n       \r\n    },[])\r\n\r\n    console.log(results)\r\n    return (\r\n        <div>\r\n           {results && <CardFull tipo={from} arrShows={results.results}/>}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Similares\r\n","import React, { useEffect, useState } from 'react'\r\nimport Axios from 'axios'\r\nimport { useParams } from 'react-router-dom'\r\nimport { useWidth } from '../../utils/hooks/useWidth'\r\nconst  Videos = ({})=> { /*tipo, id*/\r\n    const myApiKey = \"ea62e617867b87697a8db24515b62c23\"\r\n    const [results, setResults] = useState([])\r\n    const {from, uid} = useParams()\r\n    const [isMobile] = useWidth()\r\n\r\n    useEffect(() => {\r\n        Axios\r\n        .get(`https://api.themoviedb.org/3/${from}/${uid}/videos?api_key=${myApiKey}`)\r\n        .then(resp => {\r\n            setResults(resp.data)\r\n        })\r\n\r\n    },[])\r\n\r\n    console.log(results)\r\n    return ( \r\n        <div  className=\"video-container\" >\r\n            {results.results && ( \r\n            results.results.map((item, i) => {\r\n\r\n               return <iframe style={isMobile ? {margin: \"1rem auto\"} : null} className=\"video\" key={i} width=\"100%\" height=\"315\"  src={`https://www.youtube.com/embed/${item.key}`}> </iframe> \r\n                })\r\n\r\n            )}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Videos\r\n","import React from 'react'\r\nimport {   BrowserRouter as Router,  Switch,  Route,  Link, useRouteMatch, useParams} from \"react-router-dom\";\r\nimport { useEffect, useState  } from 'react';\r\nimport Axios from 'axios';\r\nimport MovieNav from \"../navigation/MovieNav\"\r\nimport Info from \"../movie/Info\"\r\nimport Reparto from \"../movie/Reparto\"\r\nimport Episodios from \"../movie/Episodios\"\r\nimport Similares from \"../movie/Similares\"\r\nimport Videos from \"../movie/Videos\"\r\nimport { useGetImg } from '../../utils/hooks/useGetImg';\r\n\r\n\r\nconst HomeMovie = ({tipo, id}) => { /* tipo es movie o tv*/\r\n    const myApiKey = \"ea62e617867b87697a8db24515b62c23\"\r\n    const [results, setResults] = useState([])\r\n    //const [urlImg, setUrlImg] = useState({})\r\n\r\n    let { path, url } = useRouteMatch();\r\n\r\n    const {from, uid} = useParams()\r\n    console.log(from, uid,  url)\r\n\r\n    let sectionL = url.split(\"/\")\r\n\r\n    const [urlImg, isLoading, isError] = useGetImg(4) \r\n    \r\n\r\n  \r\n\r\n    useEffect(() => { \r\n        Axios\r\n        .get(`https://api.themoviedb.org/3/${from}/${uid}?api_key=${myApiKey}`)\r\n        .then(resp => {\r\n            setResults(resp.data)\r\n        })\r\n\r\n    \r\n    },[]) \r\n    \r\n    return (\r\n        <div>\r\n            <div className=\"hero\" style={results && results.backdrop_path != null  ?{ backgroundImage: `url(${urlImg.base_url}/original/${results.backdrop_path})` } : {backgroundColor: \"rgba(0, 0, 0, 0.5)\"}}>\r\n            </div>\r\n\r\n                <MovieNav url={url} id={id}  tipo={tipo}/>\r\n\r\n                {/* <Info tipo={tipo} id={id} urlImg={urlImg} /> */}\r\n             {sectionL[3] === \"info\" &&   <Info tipo={tipo} id={id} urlImg={urlImg} />}\r\n             {sectionL[3] === \"reparto\" &&   <Reparto   />}\r\n             {sectionL[3] === \"videos\" &&   <Videos   />}\r\n             {sectionL[3] === \"episodios\" &&   <Episodios  urlImg={urlImg}  />}\r\n             {sectionL[3] === \"similares\" &&   <Similares urlImg={urlImg}  />} \r\n             \r\n\r\n           \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default HomeMovie\r\n","import React, { useState } from 'react'\r\nimport { useEffect } from 'react'\r\nimport Axios from 'axios'\r\nimport { Link, useParams, useRouteMatch, Redirect } from 'react-router-dom'\r\nimport NavCharacter from '../navigation/NavCharacter'\r\nimport { BsCardImage } from \"react-icons/bs\";\r\nimport HomeMovie from '../layout/HomeMovie'\r\nimport { useGetImg } from '../../utils/hooks/useGetImg'\r\nimport { useWidth } from '../../utils/hooks/useWidth'\r\n\r\nconst Creditos = ({}) => {/*urlImg, id*/\r\n    const myApiKey = \"ea62e617867b87697a8db24515b62c23\"\r\n    const [results, setResults] = useState([])\r\n    const {select} = useParams()\r\n    const [urlImg, isLoading, isError] = useGetImg(3) \r\n    const [isMobile ] = useWidth()\r\n\r\n    \r\n    useEffect(() => {\r\n        Axios\r\n        .get(`https://api.themoviedb.org/3/person/${select}/movie_credits?api_key=${myApiKey}`)\r\n        .then(resp => {\r\n            setResults(resp.data)\r\n        })\r\n    },[select])\r\n\r\n//console.log(results)\r\n    return (\r\n        \r\n\r\n        <div className=\"cards-container\">\r\n\r\n            {results.cast && results.cast.map((item, i) => {\r\n                return (\r\n                    <div key={i} className=\"card-container\" style={isMobile ? { width: \"50%\"} : null}>\r\n                         <Link to={`/movie/${item.id}/info`} >\r\n                             {/* {item.poster_path === null \r\n                             ? <div className=\"img-null-credits\"><BsCardImage /> </div> \r\n                             : <img  src={`${urlImg.base_url}${urlImg.size}${item.poster_path}`} alt=\"\"/>}\r\n                         */}\r\n                            {isLoading || item.poster_path === null || item.poster_path === undefined\r\n                             ? <div className=\"img-null-credits\"><BsCardImage /> </div> \r\n                             : <img  src={`${urlImg.base_url}${urlImg.size}${item.poster_path}`} alt=\"\"/>}\r\n                        \r\n                        \r\n                            <h3>{item.title}</h3>\r\n        \r\n                            \r\n                         </Link> \r\n                    </div>\r\n                )\r\n            })}\r\n        </div>\r\n       \r\n    )\r\n}\r\n\r\nexport default Creditos\r\n","import React from 'react'\r\nimport External from '../movie/External'\r\nimport { useWidth } from '../../utils/hooks/useWidth'\r\n\r\nconst InfoCharacter = ({urlImg, data, external}) => {\r\n    const [isMobile] = useWidth()\r\n    return (\r\n        \r\n            <div className=\"character\" style={isMobile ? {flexDirection: \"column\", marginBottom: \"5rem\"} : null}>\r\n                <img  \r\n                src={`${urlImg.base_url}${urlImg.size}${data.profile_path}`} alt=\"\"\r\n                style={isMobile ? {width: \"100%\", marginBottom: \"2rem\"} : null}/>\r\n                <div className=\"character-info\" style={isMobile ? {width: \"100%\"} : null}>\r\n                    <div >\r\n                        <h2>{data.name}</h2>\r\n                        <p style={isMobile ? {fontSize: \"1.5rem\"} : null}>{data.biography}</p>\r\n                    </div>\r\n                    {external && <External external={external} />}\r\n                </div>\r\n            </div>\r\n           \r\n        \r\n    )\r\n}\r\n\r\nexport default InfoCharacter\r\n","import React, { useEffect, useState } from 'react'\r\nimport {   BrowserRouter as Router,  Switch,  Route,  Link, useRouteMatch, useParams, Redirect} from \"react-router-dom\";\r\nimport Axios from 'axios'\r\nimport NavCharacter from \"../navigation/NavCharacter\"\r\nimport Creditos from \"../character/Creditos\"\r\nimport InfoCharacter from \"../character/InfoCharacter\"\r\nimport { useGetImg } from '../../utils/hooks/useGetImg';\r\n\r\nconst Person = ({}) => {\r\n    let {  url } = useRouteMatch();\r\n    const {select} = useParams()\r\n    const myApiKey = \"ea62e617867b87697a8db24515b62c23\"\r\n    const [results, setResults] = useState([])\r\n   \r\n    const [external, setExternal] = useState([])\r\n    const [urlImg, isLoading, isError] = useGetImg(6) \r\n\r\n   const where =  url.split(\"/\")\r\n\r\n\r\n    useEffect(() => {\r\n        Axios\r\n        .get(`https://api.themoviedb.org/3/person/${select}?api_key=${myApiKey}`)\r\n        .then(resp => {\r\n            setResults(resp.data)\r\n        })\r\n\r\n        \r\n\r\n        Axios\r\n        .get(`https://api.themoviedb.org/3/person/${select}/external_ids?api_key=${myApiKey}`)\r\n        .then(resp => {\r\n            console.log(resp.data)\r\n            setExternal(resp.data)\r\n        })\r\n\r\n    }, [select])\r\n\r\n\r\n    return (\r\n        <div className=\"\">\r\n            \r\n            <NavCharacter url={url}/> \r\n\r\n           {/* { <InfoCharacter external={external} urlImg={urlImg} data={results} />} */}\r\n            {where[3] === \"credits\" ?  <Creditos /> : <InfoCharacter external={external} urlImg={urlImg} data={results} />}\r\n             \r\n            \r\n\r\n           \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Person\r\n","import React, { useState, useEffect }  from 'react';\nimport './components/styles/main.scss';\nimport {   BrowserRouter as Router,  Switch,  Route,  Link, Redirect} from \"react-router-dom\";\nimport Header from \"./components/navigation/Header\"\nimport Home from \"./components/layout/Home\"\nimport Movies from \"./components/layout/Movies\"\nimport Tv from \"./components/layout/Tv\"\nimport Person from \"./components/pages/Person\"\nimport DisplayAll from \"./components/pages/DisplayAll\"\nimport SearchForm from  \"./components/Cards/SearchForm\"\nimport Creditos from './components/character/Creditos';\nimport HomeMovie from './components/layout/HomeMovie';\nimport Reparto from './components/movie/Reparto';\nimport Similares from './components/movie/Similares';\nimport Videos from './components/movie/Videos';\nimport Episodios from './components/movie/Episodios';\nimport Info from './components/movie/Info';\n\nfunction App() {\n \n \n\n \n\n  return (\n    <div className=\"App\">\n     \n      <Router>\n        <Header />\n\n        <Switch>\n        \n          <Route exact path=\"/\">\n              <Home />\n          </Route>\n          <Route exact path=\"/person/:select\">\n              <Person />\n          </Route>\n          <Route  path=\"/person/:select/credits\">\n              <Person />\n          </Route>\n          <Route exact path=\"/movie\">\n              <Movies />\n          </Route>\n          <Route exact path=\"/tv\">\n              <Tv />\n          </Route>\n          <Route exact path=\"/genre/:from/:genre/\">\n              <DisplayAll />\n          </Route>\n          <Route  exact path=\"/genre/:from/:genre/:num\">\n              <DisplayAll  />\n          </Route>\n          <Route exact path=\"/search/:id\">\n              <SearchForm  />\n          </Route>\n          <Route exact path=\"/:from/:uid/info\">\n              <HomeMovie />\n          </Route>\n          <Route exact path=\"/:from/:uid/reparto\">\n              <HomeMovie />\n          </Route>\n          <Route exact path=\"/:from/:uid/similares\">\n              <HomeMovie />\n          </Route>\n          <Route exact path=\"/:from/:uid/videos\">\n              <HomeMovie />\n          </Route>\n          <Route exact path=\"/:from/:uid/episodios\">\n              <HomeMovie />\n          </Route>\n          \n          \n          \n          <Route exact path=\"/search/:id/:num\">\n              <SearchForm />\n          </Route>\n                \n\n          <Route exact path=\"/:from/:category/\">\n              <DisplayAll />\n          </Route>\n          \n\n\n          <Route exact path=\"/:from/:category/:num\">\n              <DisplayAll />\n          </Route>\n          \n          \n         \n          \n          {/* <Route  path=\"/:from/:id/reparto\">\n              <Reparto />\n          </Route>\n          <Route  path=\"/:from/:id/similares\">\n              <Similares />\n          </Route>\n          <Route  path=\"/:from/:id/video\">\n              <Videos />\n          </Route>\n          <Route  path=\"/:from/:id/episodios\">\n              <Episodios />\n          </Route> */}\n          \n         \n        \n         </Switch>\n\n      </Router>\n\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}